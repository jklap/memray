name: Wheels

on:
  push:
    tags:
      - v**
  workflow_dispatch:  # allows running workflow manually from the Actions tab

permissions:
  contents: write
  
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Wheel for Linux-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cibw_python: [ "cp37-*", "cp38-*", "cp39-*", "cp310-*", "cp311-*"]
        cibw_arch: [ "x86_64", "aarch64" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: matrix.cibw_arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
      - name: Disable ptrace security restrictions
        run: |
          echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_arch }}
          CIBW_PRERELEASE_PYTHONS: True
          #CIBW_TEST_EXTRAS: test
          #CIBW_TEST_COMMAND: pytest {package}/tests
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse

  build_wheels_macos:
    name: Wheel for MacOS-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11]
        cibw_python: ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]
        cibw_arch: [ "x86_64", "arm64" ]

    steps:
      - uses: actions/checkout@v3
      - name: Sets env vars for compilation
        if: matrix.cibw_arch == 'arm64'
        run: |
          echo "CFLAGS=-target arm64-apple-macos11" >> $GITHUB_ENV
          echo "MEMRAY_LIBBACKTRACE_TARGET=arm64-apple-macos11" >> $GITHUB_ENV
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_MACOS: ${{ matrix.cibw_arch }}
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_TEST_EXTRAS: test
          CIBW_TEST_COMMAND: pytest {package}/tests
          CIBW_BUILD_VERBOSITY: 1
          MACOSX_DEPLOYMENT_TARGET: "10.14"
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  release:
    needs: [build_wheels, build_wheels_macos, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse
      - uses: softprops/action-gh-release@v1
        with:
          files: wheelhouse/*.whl
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Write index.html
        run: |
          mkdir ./public
          pip install dominate requests
          curl -sSL https://gist.github.com/ddelange/e4fb438f2f724413f45c4bece46aacfa/raw/release_assets_pip_find_links.py | python - > ./public/index.html
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
